---
import ByteList from "../../../components/number-store/ByteList.astro";
import ExplainNode from "../../../components/number-store/ExplainNode.astro";
import MinimalLayout from "../../../layouts/MinimalLayout.astro";
import {
  decodeUrlSafeBase64,
  decompressFromBase64,
} from "../../../lib/compression";
import { MAX_AGE_SECONDS } from "../../../lib/constants";
import { decodeScript } from "../../../lib/number-store";
import { explainDecodeScript } from "../../../lib/number-store/explain";

export const prerender = false;

const { b64 } = Astro.params;

if (!b64) {
  return Astro.rewrite("/404");
}

const binaryString = decodeUrlSafeBase64(b64);
const compressedBytes = new Uint8Array(binaryString.length);
for (let i = 0; i < binaryString.length; i++) {
  compressedBytes[i] = binaryString.charCodeAt(i);
}

const bytes = await decompressFromBase64(b64, "deflate-raw");

const nodes = explainDecodeScript(bytes);
const script = decodeScript(bytes);
const scriptString = JSON.stringify(script);

Astro.response.headers.set(
  "Cache-Control",
  `public, max-age=${MAX_AGE_SECONDS}`,
);
---

<MinimalLayout meta={{ title: "Inspect - BotC Script Viewer" }}>
  <Fragment slot="head">
    <meta name="robots" content="noindex" />
  </Fragment>

  <div class="inspect-page">
    <h1>Inspect URL</h1>

    <table>
      <tbody>
        <tr>
          <td>View script</td>
          <td><a href={`/ns/${b64}`}>Link</a></td>
        </tr>
        <tr>
          <td>Base64</td>
          <td><code>{b64}</code></td>
        </tr>
        <tr>
          <td>Compression</td>
          <td><code>deflate-raw</code></td>
        </tr>
        <tr>
          <td>Compressed bytes ({compressedBytes.length})</td>
          <td
            ><details>
              <summary>Expand</summary>

              <code><ByteList bytes={compressedBytes} /></code>
            </details></td
          >
        </tr>
        <tr>
          <td>Decompressed bytes ({bytes.length})</td>
          <td
            ><details>
              <summary>Expand</summary>

              <code><ByteList bytes={bytes} /></code>
            </details></td
          >
        </tr>
        <tr>
          <td>Script ({scriptString.length})</td>
          <td
            ><details>
              <summary>Expand</summary>

              <code>{scriptString}</code>
            </details></td
          >
        </tr>
      </tbody>
    </table>

    <code class="node-container"
      >{nodes.map((node) => <ExplainNode node={node} />)}</code
    >
  </div>
</MinimalLayout>

<style>
  .inspect-page {
    max-width: 80rem;
    padding: 10px;
    margin: 0 auto;

    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .node-container {
    display: inline-block;
  }
</style>
