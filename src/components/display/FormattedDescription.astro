---
import ReminderToken from "./reminder/ReminderToken.astro";

export interface Props {
  content: string;
}

interface TextPart {
  type: "regular" | "bold" | "square" | "colon";
  content: string;
}

const { content } = Astro.props;

const parts: TextPart[] = [];
const regex = /(\*[^*]+\*|:[^:]+:|\[[^\]]+\]|[^*:*\[\]]+|\*)/g;
let match: RegExpExecArray | null;

while ((match = regex.exec(content)) !== null) {
  const matchedText = match[0];

  if (
    matchedText !== "*" &&
    matchedText.startsWith("*") &&
    matchedText.endsWith("*")
  ) {
    parts.push({ type: "bold", content: matchedText.slice(1, -1) });
  } else if (matchedText.startsWith(":") && matchedText.endsWith(":")) {
    parts.push({ type: "colon", content: matchedText.slice(1, -1) });
  } else if (matchedText.startsWith("[") && matchedText.endsWith("]")) {
    parts.push({ type: "square", content: matchedText.slice(1, -1) });
  } else {
    parts.push({ type: "regular", content: matchedText });
  }
}
---

<span
  >{
    parts.map((part) => {
      switch (part.type) {
        case "bold":
          return <strong>{part.content}</strong>;
        case "square":
          return <strong>[{part.content}]</strong>;
        case "colon":
          return <ReminderToken />;
        case "regular":
        default:
          return part.content;
      }
    })
  }</span
>

<style></style>
