---
import { fixDoubleSlashPaths } from "../../lib/url";
import type { NormalisedScript } from "../../types/botc";
import Footer from "../misc/Footer.astro";
import BootleggerList from "./BootleggerList.astro";
import CharacterIcon from "./CharacterIcon.astro";
import CharacterList from "./CharacterList.astro";
import JinxList from "./JinxList.astro";
import NightOrderList from "./NightOrderList.astro";
import ReminderDefinition from "./reminder/ReminderDefinition.astro";

export interface Props {
  script: NormalisedScript;
}
const { script } = Astro.props;

const selfPath = Astro.url.toString();
const qrPath = fixDoubleSlashPaths(
  new URL(`${Astro.url.pathname}/qr.svg`, Astro.url),
).toString();

// Warning information
const allExtraNightOrderCharacters = script.warnings.flatMap((warning) =>
  warning.type === "extra-night-order-characters" ? warning.characters : [],
);
---

<div class="script-display">
  <ReminderDefinition />

  <div class="page">
    <div class="title-area">
      <h1 id="script" class="title">
        <span>{script.name || "Custom Script"}</span>
        {
          script.author && (
            <>
              <span class="title-reduced">&ensp;by </span>
              <span class="title-reduced">{script.author}</span>
            </>
          )
        }
      </h1>
      {
        script.teams.fabled.length > 0 && (
          <ul class="fabled-list">
            {script.teams.fabled.map((character) => (
              <li class="fabled-list-item">
                <a href={`#${character.id}`} class="fabled-list-item">
                  <CharacterIcon size={48} character={character} />
                  <span class="fabled-title">{character.name}</span>
                </a>
              </li>
            ))}
          </ul>
        )
      }
    </div>
    {
      script.bootlegger && script.bootlegger.length > 0 && (
        <BootleggerList rules={script.bootlegger} />
      )
    }
    <h2 class="category-title">Characters</h2>
    <h3 id="townsfolk" class="category-title">Townsfolk</h3>
    <CharacterList characters={script.teams.townsfolk} />
    <h3 id="outsiders" class="category-title">Outsiders</h3>
    <CharacterList characters={script.teams.outsider} />
    <h3 id="minions" class="category-title">Minions</h3>
    <CharacterList characters={script.teams.minion} />
    <h3 id="demons" class="category-title">Demons</h3>
    <CharacterList characters={script.teams.demon} />
  </div>

  {
    (script.jinxes.length > 0 ||
      script.teams.traveller.length > 0 ||
      script.teams.fabled.length > 0) && (
      <div class="page">
        {script.teams.traveller.length > 0 && (
          <>
            <h3 id="travellers" class="category-title">
              Travellers
            </h3>
            <CharacterList characters={script.teams.traveller} />
          </>
        )}
        {script.teams.fabled.length > 0 && (
          <>
            <h3 id="fabled" class="category-title">
              Fabled
            </h3>
            <CharacterList characters={script.teams.fabled} />
          </>
        )}
        {script.teams.loric.length > 0 && (
          <>
            <h3 id="loric" class="category-title">
              Loric
            </h3>
            <CharacterList characters={script.teams.loric} />
          </>
        )}
        {script.jinxes.length > 0 && (
          <>
            <h3 id="jinxes" class="category-title">
              Jinxes
            </h3>
            <JinxList jinxes={script.jinxes} />
          </>
        )}
      </div>
    )
  }

  <hr class="screen-only" />

  <div class="page">
    <h2 id="night-order" class="category-title">Night Order</h2>

    {
      allExtraNightOrderCharacters.length > 0 && (
        <div class="warning-box screen-only">
          The following characters are referenced in the night order, but are
          not listed on the script: {allExtraNightOrderCharacters.join(", ")}.
        </div>
      )
    }

    <div class="two-column">
      <div>
        <h3 id="first-night" class="category-title">First Night</h3>
        <NightOrderList info={script.firstNight} />
      </div>
      <div>
        <h3 id="other-night" class="category-title">Other Nights</h3>
        <NightOrderList info={script.otherNight} />
      </div>
    </div>
  </div>

  <div class="page force-page qr-page print-only">
    <img
      id="qr-code"
      class="qr"
      src={qrPath}
      alt="QR code for this page"
      loading="lazy"
    />
    <p class="qr-text">{selfPath}</p>
  </div>

  <Footer isScreenOnly />
</div>

<script>
  document.querySelectorAll(".page.qr-page").forEach((qrPage) => {
    const img = qrPage.querySelector<HTMLImageElement>("img#qr-code")!;

    function hideQrPage() {
      // The page already has .print-only, which is mutually exclusive.
      // No matter which media, the page will always be hidden.
      qrPage.classList.add("screen-only");
    }

    img.addEventListener("error", hideQrPage);
    if (img.complete && img.naturalWidth + img.naturalHeight === 0) {
      hideQrPage();
    }
  });
</script>

<style>
  @media screen {
    .script-display {
      margin: 2rem 1rem;

      @media (min-width: 900px) {
        margin: 2rem;
      }
    }
  }

  .top-links {
    opacity: 0.7;
    display: flex;
    gap: 0.5rem;
    margin-block-start: -1rem;
    margin-block-end: 1rem;
    transition: opacity 0.1s ease-in-out;
  }

  .page {
    break-inside: avoid-page;
  }

  .force-page {
    break-before: always;
    break-after: always;
  }

  .title-area {
    display: flex;
    flex-direction: column;

    @media print, (min-width: 848px) {
      flex-direction: row;
      gap: 2rem;
    }
  }

  .title-reduced {
    font-size: 1.4rem;
  }

  .category-title {
    margin-block: 1rem;
    break-after: avoid;
  }

  .fabled-list {
    flex-grow: 1;
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    list-style: none;
    padding-inline-start: 0;

    @media print, (min-width: 848px) {
      margin-block-start: -1rem;
    }

    @media print {
      justify-content: end;
    }
  }

  .fabled-list-item {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-decoration: none;
  }

  .fabled-title {
    font-family: var(--font-title);
    font-size: 1.2rem;
  }

  .two-column {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
    break-inside: page;

    @media print, (min-width: 848px) {
      grid-template-columns: 1fr 1fr;
    }

    :global(.character-list) {
      columns: 1;
    }
  }

  .qr-page {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2rem;
    padding: 2rem;
  }

  .qr {
    max-width: 256px;

    @media print {
      max-width: 75vw;
    }
  }

  .qr-text {
    word-break: break-all;
  }

  .footer {
    opacity: 0.7;
    font-size: 0.9rem;
    margin-block-start: 2rem;
  }

  .warning-box {
    background-color: var(--color-level-background-warning);
    border: 1px solid var(--color-level-border-warning);
    padding: 0.5rem;
  }
</style>
